// <auto-generated />
using System;
using ClassAct.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassAct.Data.Migrations
{
    [DbContext(typeof(ClassActDbContext))]
    partial class ClassActDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("ClassAct.Data.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstructorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InstructorId = 1,
                            Title = "Mathematics 101"
                        },
                        new
                        {
                            Id = 2,
                            InstructorId = 3,
                            Title = "Mathematics 101"
                        },
                        new
                        {
                            Id = 3,
                            InstructorId = 2,
                            Title = "History 101"
                        },
                        new
                        {
                            Id = 4,
                            InstructorId = 2,
                            Title = "History 102"
                        });
                });

            modelBuilder.Entity("ClassAct.Data.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("GuestUntil")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsGuest")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Alice",
                            IsGuest = false,
                            LastName = "Anderson"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Bob",
                            IsGuest = false,
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Jan",
                            IsGuest = false,
                            LastName = "Smith"
                        });
                });

            modelBuilder.Entity("ClassAct.Data.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(2005, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlie.clark@email.com",
                            FirstName = "Charlie",
                            LastName = "Clark"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(2006, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dana.davis@email.com",
                            FirstName = "Dana",
                            LastName = "Davis"
                        });
                });

            modelBuilder.Entity("ClassAct.Data.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("ClassAct.Data.Models.Course", b =>
                {
                    b.HasOne("ClassAct.Data.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ClassAct.Data.Models.StudentCourse", b =>
                {
                    b.HasOne("ClassAct.Data.Models.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassAct.Data.Models.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ClassAct.Data.Models.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("ClassAct.Data.Models.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
